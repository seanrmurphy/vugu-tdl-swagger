// Code generated by go-swagger; DO NOT EDIT.

package developers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteTodoReader is a Reader for the DeleteTodo structure.
type DeleteTodoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTodoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteTodoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteTodoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTodoOK creates a DeleteTodoOK with default headers values
func NewDeleteTodoOK() *DeleteTodoOK {
	return &DeleteTodoOK{}
}

/*DeleteTodoOK handles this case with default header values.

item deleted
*/
type DeleteTodoOK struct {
}

func (o *DeleteTodoOK) Error() string {
	return fmt.Sprintf("[DELETE /todo/{todoid}][%d] deleteTodoOK ", 200)
}

func (o *DeleteTodoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTodoNotFound creates a DeleteTodoNotFound with default headers values
func NewDeleteTodoNotFound() *DeleteTodoNotFound {
	return &DeleteTodoNotFound{}
}

/*DeleteTodoNotFound handles this case with default header values.

item not found
*/
type DeleteTodoNotFound struct {
}

func (o *DeleteTodoNotFound) Error() string {
	return fmt.Sprintf("[DELETE /todo/{todoid}][%d] deleteTodoNotFound ", 404)
}

func (o *DeleteTodoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
