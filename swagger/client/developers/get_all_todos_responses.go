// Code generated by go-swagger; DO NOT EDIT.

package developers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/seanrmurphy/vugu-tdl-swagger/swagger/models"
)

// GetAllTodosReader is a Reader for the GetAllTodos structure.
type GetAllTodosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllTodosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllTodosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAllTodosBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllTodosOK creates a GetAllTodosOK with default headers values
func NewGetAllTodosOK() *GetAllTodosOK {
	return &GetAllTodosOK{}
}

/*GetAllTodosOK handles this case with default header values.

list of todos
*/
type GetAllTodosOK struct {
	Payload []*models.Todo
}

func (o *GetAllTodosOK) Error() string {
	return fmt.Sprintf("[GET /todo][%d] getAllTodosOK  %+v", 200, o.Payload)
}

func (o *GetAllTodosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTodosBadRequest creates a GetAllTodosBadRequest with default headers values
func NewGetAllTodosBadRequest() *GetAllTodosBadRequest {
	return &GetAllTodosBadRequest{}
}

/*GetAllTodosBadRequest handles this case with default header values.

bad input parameter
*/
type GetAllTodosBadRequest struct {
}

func (o *GetAllTodosBadRequest) Error() string {
	return fmt.Sprintf("[GET /todo][%d] getAllTodosBadRequest ", 400)
}

func (o *GetAllTodosBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
